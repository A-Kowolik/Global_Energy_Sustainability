{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1cYSdj97h-aWsIn9JbzQ0dP3fhKn8IUNd","authorship_tag":"ABX9TyPrsyr2c7721uUm1OFE/PBV"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Modules Used for Preliminary analysis"],"metadata":{"id":"_2zbHUTBZQ2p"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","from google.colab import files\n","uploaded = files.upload()\n","import matplotlib.pyplot as plt"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":71},"id":"uW8cPiPWiVdK","executionInfo":{"status":"ok","timestamp":1697222066078,"user_tz":240,"elapsed":7190,"user":{"displayName":"Aidan Kowolik","userId":"04765293928967826033"}},"outputId":"803345bb-6bf9-4647-e3e8-342ce4c18e35"},"execution_count":2,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-8b6c4bf0-d27a-4f3e-b4db-398b741f18cd\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-8b6c4bf0-d27a-4f3e-b4db-398b741f18cd\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving global-data-on-sustainable-energy.csv to global-data-on-sustainable-energy.csv\n"]}]},{"cell_type":"markdown","source":["Importing the dataset & Showcase"],"metadata":{"id":"anPz33xKctJU"}},{"cell_type":"code","source":["path = '/content/global-data-on-sustainable-energy.csv'\n","SustainEnergyData = pd.read_csv(path)\n","SustainEnergyData.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":340},"id":"l-FUq_oSobb3","executionInfo":{"status":"ok","timestamp":1697222073449,"user_tz":240,"elapsed":133,"user":{"displayName":"Aidan Kowolik","userId":"04765293928967826033"}},"outputId":"a910b9c2-49e6-46e6-c807-8250e4266b65"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Entity  Year  Access to electricity (% of population)  \\\n","0  Afghanistan  2000                                 1.613591   \n","1  Afghanistan  2001                                 4.074574   \n","2  Afghanistan  2002                                 9.409158   \n","3  Afghanistan  2003                                14.738506   \n","4  Afghanistan  2004                                20.064968   \n","\n","   Access to clean fuels for cooking  \\\n","0                                6.2   \n","1                                7.2   \n","2                                8.2   \n","3                                9.5   \n","4                               10.9   \n","\n","   Renewable-electricity-generating-capacity-per-capita  \\\n","0                                               9.22      \n","1                                               8.86      \n","2                                               8.47      \n","3                                               8.09      \n","4                                               7.75      \n","\n","   Financial flows to developing countries (US $)  \\\n","0                                         20000.0   \n","1                                        130000.0   \n","2                                       3950000.0   \n","3                                      25970000.0   \n","4                                             NaN   \n","\n","   Renewable energy share in the total final energy consumption (%)  \\\n","0                                              44.99                  \n","1                                              45.60                  \n","2                                              37.83                  \n","3                                              36.66                  \n","4                                              44.24                  \n","\n","   Electricity from fossil fuels (TWh)  Electricity from nuclear (TWh)  \\\n","0                                 0.16                             0.0   \n","1                                 0.09                             0.0   \n","2                                 0.13                             0.0   \n","3                                 0.31                             0.0   \n","4                                 0.33                             0.0   \n","\n","   Electricity from renewables (TWh)  ...  \\\n","0                               0.31  ...   \n","1                               0.50  ...   \n","2                               0.56  ...   \n","3                               0.63  ...   \n","4                               0.56  ...   \n","\n","   Primary energy consumption per capita (kWh/person)  \\\n","0                                          302.59482    \n","1                                          236.89185    \n","2                                          210.86215    \n","3                                          229.96822    \n","4                                          204.23125    \n","\n","   Energy intensity level of primary energy (MJ/$2017 PPP GDP)  \\\n","0                                               1.64             \n","1                                               1.74             \n","2                                               1.40             \n","3                                               1.40             \n","4                                               1.20             \n","\n","   Value_co2_emissions_kt_by_country  \\\n","0                         760.000000   \n","1                         730.000000   \n","2                        1029.999971   \n","3                        1220.000029   \n","4                        1029.999971   \n","\n","   Renewables (% equivalent primary energy)  gdp_growth  gdp_per_capita  \\\n","0                                       NaN         NaN             NaN   \n","1                                       NaN         NaN             NaN   \n","2                                       NaN         NaN      179.426579   \n","3                                       NaN    8.832278      190.683814   \n","4                                       NaN    1.414118      211.382074   \n","\n","   Density\\n(P/Km2) Land Area(Km2)  Latitude  Longitude  \n","0                60       652230.0  33.93911  67.709953  \n","1                60       652230.0  33.93911  67.709953  \n","2                60       652230.0  33.93911  67.709953  \n","3                60       652230.0  33.93911  67.709953  \n","4                60       652230.0  33.93911  67.709953  \n","\n","[5 rows x 21 columns]"],"text/html":["\n","  <div id=\"df-d04fdc06-dfec-4f46-9ebd-fb9a5027b0fd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Entity</th>\n","      <th>Year</th>\n","      <th>Access to electricity (% of population)</th>\n","      <th>Access to clean fuels for cooking</th>\n","      <th>Renewable-electricity-generating-capacity-per-capita</th>\n","      <th>Financial flows to developing countries (US $)</th>\n","      <th>Renewable energy share in the total final energy consumption (%)</th>\n","      <th>Electricity from fossil fuels (TWh)</th>\n","      <th>Electricity from nuclear (TWh)</th>\n","      <th>Electricity from renewables (TWh)</th>\n","      <th>...</th>\n","      <th>Primary energy consumption per capita (kWh/person)</th>\n","      <th>Energy intensity level of primary energy (MJ/$2017 PPP GDP)</th>\n","      <th>Value_co2_emissions_kt_by_country</th>\n","      <th>Renewables (% equivalent primary energy)</th>\n","      <th>gdp_growth</th>\n","      <th>gdp_per_capita</th>\n","      <th>Density\\n(P/Km2)</th>\n","      <th>Land Area(Km2)</th>\n","      <th>Latitude</th>\n","      <th>Longitude</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Afghanistan</td>\n","      <td>2000</td>\n","      <td>1.613591</td>\n","      <td>6.2</td>\n","      <td>9.22</td>\n","      <td>20000.0</td>\n","      <td>44.99</td>\n","      <td>0.16</td>\n","      <td>0.0</td>\n","      <td>0.31</td>\n","      <td>...</td>\n","      <td>302.59482</td>\n","      <td>1.64</td>\n","      <td>760.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>60</td>\n","      <td>652230.0</td>\n","      <td>33.93911</td>\n","      <td>67.709953</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Afghanistan</td>\n","      <td>2001</td>\n","      <td>4.074574</td>\n","      <td>7.2</td>\n","      <td>8.86</td>\n","      <td>130000.0</td>\n","      <td>45.60</td>\n","      <td>0.09</td>\n","      <td>0.0</td>\n","      <td>0.50</td>\n","      <td>...</td>\n","      <td>236.89185</td>\n","      <td>1.74</td>\n","      <td>730.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>60</td>\n","      <td>652230.0</td>\n","      <td>33.93911</td>\n","      <td>67.709953</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Afghanistan</td>\n","      <td>2002</td>\n","      <td>9.409158</td>\n","      <td>8.2</td>\n","      <td>8.47</td>\n","      <td>3950000.0</td>\n","      <td>37.83</td>\n","      <td>0.13</td>\n","      <td>0.0</td>\n","      <td>0.56</td>\n","      <td>...</td>\n","      <td>210.86215</td>\n","      <td>1.40</td>\n","      <td>1029.999971</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>179.426579</td>\n","      <td>60</td>\n","      <td>652230.0</td>\n","      <td>33.93911</td>\n","      <td>67.709953</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Afghanistan</td>\n","      <td>2003</td>\n","      <td>14.738506</td>\n","      <td>9.5</td>\n","      <td>8.09</td>\n","      <td>25970000.0</td>\n","      <td>36.66</td>\n","      <td>0.31</td>\n","      <td>0.0</td>\n","      <td>0.63</td>\n","      <td>...</td>\n","      <td>229.96822</td>\n","      <td>1.40</td>\n","      <td>1220.000029</td>\n","      <td>NaN</td>\n","      <td>8.832278</td>\n","      <td>190.683814</td>\n","      <td>60</td>\n","      <td>652230.0</td>\n","      <td>33.93911</td>\n","      <td>67.709953</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Afghanistan</td>\n","      <td>2004</td>\n","      <td>20.064968</td>\n","      <td>10.9</td>\n","      <td>7.75</td>\n","      <td>NaN</td>\n","      <td>44.24</td>\n","      <td>0.33</td>\n","      <td>0.0</td>\n","      <td>0.56</td>\n","      <td>...</td>\n","      <td>204.23125</td>\n","      <td>1.20</td>\n","      <td>1029.999971</td>\n","      <td>NaN</td>\n","      <td>1.414118</td>\n","      <td>211.382074</td>\n","      <td>60</td>\n","      <td>652230.0</td>\n","      <td>33.93911</td>\n","      <td>67.709953</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 21 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d04fdc06-dfec-4f46-9ebd-fb9a5027b0fd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d04fdc06-dfec-4f46-9ebd-fb9a5027b0fd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d04fdc06-dfec-4f46-9ebd-fb9a5027b0fd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a8b0d28d-68a0-439c-a39c-87a0db9989ca\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a8b0d28d-68a0-439c-a39c-87a0db9989ca')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a8b0d28d-68a0-439c-a39c-87a0db9989ca button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["Getting Info on Value Types"],"metadata":{"id":"jd972EUI3nqc"}},{"cell_type":"code","source":["SustainEnergyData.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uLZG06c63oMM","executionInfo":{"status":"ok","timestamp":1697130759758,"user_tz":240,"elapsed":252,"user":{"displayName":"Aidan Kowolik","userId":"04765293928967826033"}},"outputId":"ae40ca3d-e4c9-42b3-a96d-69d31d35e516"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3649 entries, 0 to 3648\n","Data columns (total 21 columns):\n"," #   Column                                                            Non-Null Count  Dtype  \n","---  ------                                                            --------------  -----  \n"," 0   Entity                                                            3649 non-null   object \n"," 1   Year                                                              3649 non-null   int64  \n"," 2   Access to electricity (% of population)                           3639 non-null   float64\n"," 3   Access to clean fuels for cooking                                 3480 non-null   float64\n"," 4   Renewable-electricity-generating-capacity-per-capita              2718 non-null   float64\n"," 5   Financial flows to developing countries (US $)                    1560 non-null   float64\n"," 6   Renewable energy share in the total final energy consumption (%)  3455 non-null   float64\n"," 7   Electricity from fossil fuels (TWh)                               3628 non-null   float64\n"," 8   Electricity from nuclear (TWh)                                    3523 non-null   float64\n"," 9   Electricity from renewables (TWh)                                 3628 non-null   float64\n"," 10  Low-carbon electricity (% electricity)                            3607 non-null   float64\n"," 11  Primary energy consumption per capita (kWh/person)                3649 non-null   float64\n"," 12  Energy intensity level of primary energy (MJ/$2017 PPP GDP)       3442 non-null   float64\n"," 13  Value_co2_emissions_kt_by_country                                 3221 non-null   float64\n"," 14  Renewables (% equivalent primary energy)                          1512 non-null   float64\n"," 15  gdp_growth                                                        3332 non-null   float64\n"," 16  gdp_per_capita                                                    3367 non-null   float64\n"," 17  Density\\n(P/Km2)                                                  3648 non-null   object \n"," 18  Land Area(Km2)                                                    3648 non-null   float64\n"," 19  Latitude                                                          3648 non-null   float64\n"," 20  Longitude                                                         3648 non-null   float64\n","dtypes: float64(18), int64(1), object(2)\n","memory usage: 598.8+ KB\n"]}]},{"cell_type":"markdown","source":["Shape of the Dataframe"],"metadata":{"id":"duSRNxOTMdT3"}},{"cell_type":"code","source":["SustainEnergyData.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d8RpAXvAMiJD","executionInfo":{"status":"ok","timestamp":1697136154441,"user_tz":240,"elapsed":287,"user":{"displayName":"Aidan Kowolik","userId":"04765293928967826033"}},"outputId":"2a1e2e13-3258-43d7-cef2-26f4d5ab2991"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3649, 19)"]},"metadata":{},"execution_count":40}]},{"cell_type":"markdown","source":["Description of the Dataframe"],"metadata":{"id":"N2NTGhVwrHel"}},{"cell_type":"code","source":["SustainEnergyData.describe().transpose()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":645},"id":"KoazsasnrHKi","executionInfo":{"status":"ok","timestamp":1697129546482,"user_tz":240,"elapsed":273,"user":{"displayName":"Aidan Kowolik","userId":"04765293928967826033"}},"outputId":"c95833f9-41c0-405c-d84a-e43c693e2ace"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                     count          mean  \\\n","Year                                                3649.0  2.010038e+03   \n","Access to electricity (% of population)             3639.0  7.893370e+01   \n","Access to clean fuels for cooking                   3480.0  6.325529e+01   \n","Renewable-electricity-generating-capacity-per-c...  2718.0  1.131375e+02   \n","Financial flows to developing countries (US $)      1560.0  9.422400e+07   \n","Renewable energy share in the total final energ...  3455.0  3.263816e+01   \n","Electricity from fossil fuels (TWh)                 3628.0  7.036500e+01   \n","Electricity from nuclear (TWh)                      3523.0  1.345019e+01   \n","Electricity from renewables (TWh)                   3628.0  2.396801e+01   \n","Low-carbon electricity (% electricity)              3607.0  3.680118e+01   \n","Primary energy consumption per capita (kWh/person)  3649.0  2.574398e+04   \n","Energy intensity level of primary energy (MJ/$2...  3442.0  5.307345e+00   \n","Value_co2_emissions_kt_by_country                   3221.0  1.598665e+05   \n","Renewables (% equivalent primary energy)            1512.0  1.198671e+01   \n","gdp_growth                                          3332.0  3.441610e+00   \n","gdp_per_capita                                      3367.0  1.328377e+04   \n","Land Area(Km2)                                      3648.0  6.332135e+05   \n","Latitude                                            3648.0  1.824639e+01   \n","Longitude                                           3648.0  1.482269e+01   \n","\n","                                                             std          min  \\\n","Year                                                6.054228e+00  2000.000000   \n","Access to electricity (% of population)             3.027554e+01     1.252269   \n","Access to clean fuels for cooking                   3.904366e+01     0.000000   \n","Renewable-electricity-generating-capacity-per-c...  2.441673e+02     0.000000   \n","Financial flows to developing countries (US $)      2.981544e+08     0.000000   \n","Renewable energy share in the total final energ...  2.989490e+01     0.000000   \n","Electricity from fossil fuels (TWh)                 3.480519e+02     0.000000   \n","Electricity from nuclear (TWh)                      7.300662e+01     0.000000   \n","Electricity from renewables (TWh)                   1.044311e+02     0.000000   \n","Low-carbon electricity (% electricity)              3.431488e+01     0.000000   \n","Primary energy consumption per capita (kWh/person)  3.477322e+04     0.000000   \n","Energy intensity level of primary energy (MJ/$2...  3.532020e+00     0.110000   \n","Value_co2_emissions_kt_by_country                   7.736611e+05    10.000000   \n","Renewables (% equivalent primary energy)            1.499464e+01     0.000000   \n","gdp_growth                                          5.686720e+00   -62.075920   \n","gdp_per_capita                                      1.970987e+04   111.927225   \n","Land Area(Km2)                                      1.585519e+06    21.000000   \n","Latitude                                            2.415923e+01   -40.900557   \n","Longitude                                           6.634815e+01  -175.198242   \n","\n","                                                              25%  \\\n","Year                                                  2005.000000   \n","Access to electricity (% of population)                 59.800890   \n","Access to clean fuels for cooking                       23.175000   \n","Renewable-electricity-generating-capacity-per-c...       3.540000   \n","Financial flows to developing countries (US $)      260000.000000   \n","Renewable energy share in the total final energ...       6.515000   \n","Electricity from fossil fuels (TWh)                      0.290000   \n","Electricity from nuclear (TWh)                           0.000000   \n","Electricity from renewables (TWh)                        0.040000   \n","Low-carbon electricity (% electricity)                   2.877847   \n","Primary energy consumption per capita (kWh/person)    3116.737300   \n","Energy intensity level of primary energy (MJ/$2...       3.170000   \n","Value_co2_emissions_kt_by_country                     2019.999981   \n","Renewables (% equivalent primary energy)                 2.137095   \n","gdp_growth                                               1.383302   \n","gdp_per_capita                                        1337.813437   \n","Land Area(Km2)                                       25713.000000   \n","Latitude                                                 3.202778   \n","Longitude                                              -11.779889   \n","\n","                                                             50%  \\\n","Year                                                2.010000e+03   \n","Access to electricity (% of population)             9.836157e+01   \n","Access to clean fuels for cooking                   8.315000e+01   \n","Renewable-electricity-generating-capacity-per-c...  3.291000e+01   \n","Financial flows to developing countries (US $)      5.665000e+06   \n","Renewable energy share in the total final energ...  2.330000e+01   \n","Electricity from fossil fuels (TWh)                 2.970000e+00   \n","Electricity from nuclear (TWh)                      0.000000e+00   \n","Electricity from renewables (TWh)                   1.470000e+00   \n","Low-carbon electricity (% electricity)              2.786507e+01   \n","Primary energy consumption per capita (kWh/person)  1.312057e+04   \n","Energy intensity level of primary energy (MJ/$2...  4.300000e+00   \n","Value_co2_emissions_kt_by_country                   1.050000e+04   \n","Renewables (% equivalent primary energy)            6.290766e+00   \n","gdp_growth                                          3.559855e+00   \n","gdp_per_capita                                      4.578633e+03   \n","Land Area(Km2)                                      1.176000e+05   \n","Latitude                                            1.718988e+01   \n","Longitude                                           1.914514e+01   \n","\n","                                                             75%           max  \n","Year                                                2.015000e+03  2.020000e+03  \n","Access to electricity (% of population)             1.000000e+02  1.000000e+02  \n","Access to clean fuels for cooking                   1.000000e+02  1.000000e+02  \n","Renewable-electricity-generating-capacity-per-c...  1.122100e+02  3.060190e+03  \n","Financial flows to developing countries (US $)      5.534750e+07  5.202310e+09  \n","Renewable energy share in the total final energ...  5.524500e+01  9.604000e+01  \n","Electricity from fossil fuels (TWh)                 2.683750e+01  5.184130e+03  \n","Electricity from nuclear (TWh)                      0.000000e+00  8.094100e+02  \n","Electricity from renewables (TWh)                   9.600000e+00  2.184940e+03  \n","Low-carbon electricity (% electricity)              6.440379e+01  1.000000e+02  \n","Primary energy consumption per capita (kWh/person)  3.389278e+04  2.625857e+05  \n","Energy intensity level of primary energy (MJ/$2...  6.027500e+00  3.257000e+01  \n","Value_co2_emissions_kt_by_country                   6.058000e+04  1.070722e+07  \n","Renewables (% equivalent primary energy)            1.684164e+01  8.683659e+01  \n","gdp_growth                                          5.830099e+00  1.231396e+02  \n","gdp_per_capita                                      1.576862e+04  1.235142e+05  \n","Land Area(Km2)                                      5.131200e+05  9.984670e+06  \n","Latitude                                            3.896972e+01  6.496305e+01  \n","Longitude                                           4.619962e+01  1.780650e+02  "],"text/html":["\n","  <div id=\"df-e593e93f-6fc2-4f2b-af1c-4eb81b20cf0c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Year</th>\n","      <td>3649.0</td>\n","      <td>2.010038e+03</td>\n","      <td>6.054228e+00</td>\n","      <td>2000.000000</td>\n","      <td>2005.000000</td>\n","      <td>2.010000e+03</td>\n","      <td>2.015000e+03</td>\n","      <td>2.020000e+03</td>\n","    </tr>\n","    <tr>\n","      <th>Access to electricity (% of population)</th>\n","      <td>3639.0</td>\n","      <td>7.893370e+01</td>\n","      <td>3.027554e+01</td>\n","      <td>1.252269</td>\n","      <td>59.800890</td>\n","      <td>9.836157e+01</td>\n","      <td>1.000000e+02</td>\n","      <td>1.000000e+02</td>\n","    </tr>\n","    <tr>\n","      <th>Access to clean fuels for cooking</th>\n","      <td>3480.0</td>\n","      <td>6.325529e+01</td>\n","      <td>3.904366e+01</td>\n","      <td>0.000000</td>\n","      <td>23.175000</td>\n","      <td>8.315000e+01</td>\n","      <td>1.000000e+02</td>\n","      <td>1.000000e+02</td>\n","    </tr>\n","    <tr>\n","      <th>Renewable-electricity-generating-capacity-per-capita</th>\n","      <td>2718.0</td>\n","      <td>1.131375e+02</td>\n","      <td>2.441673e+02</td>\n","      <td>0.000000</td>\n","      <td>3.540000</td>\n","      <td>3.291000e+01</td>\n","      <td>1.122100e+02</td>\n","      <td>3.060190e+03</td>\n","    </tr>\n","    <tr>\n","      <th>Financial flows to developing countries (US $)</th>\n","      <td>1560.0</td>\n","      <td>9.422400e+07</td>\n","      <td>2.981544e+08</td>\n","      <td>0.000000</td>\n","      <td>260000.000000</td>\n","      <td>5.665000e+06</td>\n","      <td>5.534750e+07</td>\n","      <td>5.202310e+09</td>\n","    </tr>\n","    <tr>\n","      <th>Renewable energy share in the total final energy consumption (%)</th>\n","      <td>3455.0</td>\n","      <td>3.263816e+01</td>\n","      <td>2.989490e+01</td>\n","      <td>0.000000</td>\n","      <td>6.515000</td>\n","      <td>2.330000e+01</td>\n","      <td>5.524500e+01</td>\n","      <td>9.604000e+01</td>\n","    </tr>\n","    <tr>\n","      <th>Electricity from fossil fuels (TWh)</th>\n","      <td>3628.0</td>\n","      <td>7.036500e+01</td>\n","      <td>3.480519e+02</td>\n","      <td>0.000000</td>\n","      <td>0.290000</td>\n","      <td>2.970000e+00</td>\n","      <td>2.683750e+01</td>\n","      <td>5.184130e+03</td>\n","    </tr>\n","    <tr>\n","      <th>Electricity from nuclear (TWh)</th>\n","      <td>3523.0</td>\n","      <td>1.345019e+01</td>\n","      <td>7.300662e+01</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>8.094100e+02</td>\n","    </tr>\n","    <tr>\n","      <th>Electricity from renewables (TWh)</th>\n","      <td>3628.0</td>\n","      <td>2.396801e+01</td>\n","      <td>1.044311e+02</td>\n","      <td>0.000000</td>\n","      <td>0.040000</td>\n","      <td>1.470000e+00</td>\n","      <td>9.600000e+00</td>\n","      <td>2.184940e+03</td>\n","    </tr>\n","    <tr>\n","      <th>Low-carbon electricity (% electricity)</th>\n","      <td>3607.0</td>\n","      <td>3.680118e+01</td>\n","      <td>3.431488e+01</td>\n","      <td>0.000000</td>\n","      <td>2.877847</td>\n","      <td>2.786507e+01</td>\n","      <td>6.440379e+01</td>\n","      <td>1.000000e+02</td>\n","    </tr>\n","    <tr>\n","      <th>Primary energy consumption per capita (kWh/person)</th>\n","      <td>3649.0</td>\n","      <td>2.574398e+04</td>\n","      <td>3.477322e+04</td>\n","      <td>0.000000</td>\n","      <td>3116.737300</td>\n","      <td>1.312057e+04</td>\n","      <td>3.389278e+04</td>\n","      <td>2.625857e+05</td>\n","    </tr>\n","    <tr>\n","      <th>Energy intensity level of primary energy (MJ/$2017 PPP GDP)</th>\n","      <td>3442.0</td>\n","      <td>5.307345e+00</td>\n","      <td>3.532020e+00</td>\n","      <td>0.110000</td>\n","      <td>3.170000</td>\n","      <td>4.300000e+00</td>\n","      <td>6.027500e+00</td>\n","      <td>3.257000e+01</td>\n","    </tr>\n","    <tr>\n","      <th>Value_co2_emissions_kt_by_country</th>\n","      <td>3221.0</td>\n","      <td>1.598665e+05</td>\n","      <td>7.736611e+05</td>\n","      <td>10.000000</td>\n","      <td>2019.999981</td>\n","      <td>1.050000e+04</td>\n","      <td>6.058000e+04</td>\n","      <td>1.070722e+07</td>\n","    </tr>\n","    <tr>\n","      <th>Renewables (% equivalent primary energy)</th>\n","      <td>1512.0</td>\n","      <td>1.198671e+01</td>\n","      <td>1.499464e+01</td>\n","      <td>0.000000</td>\n","      <td>2.137095</td>\n","      <td>6.290766e+00</td>\n","      <td>1.684164e+01</td>\n","      <td>8.683659e+01</td>\n","    </tr>\n","    <tr>\n","      <th>gdp_growth</th>\n","      <td>3332.0</td>\n","      <td>3.441610e+00</td>\n","      <td>5.686720e+00</td>\n","      <td>-62.075920</td>\n","      <td>1.383302</td>\n","      <td>3.559855e+00</td>\n","      <td>5.830099e+00</td>\n","      <td>1.231396e+02</td>\n","    </tr>\n","    <tr>\n","      <th>gdp_per_capita</th>\n","      <td>3367.0</td>\n","      <td>1.328377e+04</td>\n","      <td>1.970987e+04</td>\n","      <td>111.927225</td>\n","      <td>1337.813437</td>\n","      <td>4.578633e+03</td>\n","      <td>1.576862e+04</td>\n","      <td>1.235142e+05</td>\n","    </tr>\n","    <tr>\n","      <th>Land Area(Km2)</th>\n","      <td>3648.0</td>\n","      <td>6.332135e+05</td>\n","      <td>1.585519e+06</td>\n","      <td>21.000000</td>\n","      <td>25713.000000</td>\n","      <td>1.176000e+05</td>\n","      <td>5.131200e+05</td>\n","      <td>9.984670e+06</td>\n","    </tr>\n","    <tr>\n","      <th>Latitude</th>\n","      <td>3648.0</td>\n","      <td>1.824639e+01</td>\n","      <td>2.415923e+01</td>\n","      <td>-40.900557</td>\n","      <td>3.202778</td>\n","      <td>1.718988e+01</td>\n","      <td>3.896972e+01</td>\n","      <td>6.496305e+01</td>\n","    </tr>\n","    <tr>\n","      <th>Longitude</th>\n","      <td>3648.0</td>\n","      <td>1.482269e+01</td>\n","      <td>6.634815e+01</td>\n","      <td>-175.198242</td>\n","      <td>-11.779889</td>\n","      <td>1.914514e+01</td>\n","      <td>4.619962e+01</td>\n","      <td>1.780650e+02</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e593e93f-6fc2-4f2b-af1c-4eb81b20cf0c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e593e93f-6fc2-4f2b-af1c-4eb81b20cf0c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e593e93f-6fc2-4f2b-af1c-4eb81b20cf0c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bfe5b148-9672-4f72-8f56-72ebcff8c85c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bfe5b148-9672-4f72-8f56-72ebcff8c85c')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bfe5b148-9672-4f72-8f56-72ebcff8c85c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["Finding the Null Values"],"metadata":{"id":"14uwu2nm5sGc"}},{"cell_type":"code","source":["SustainEnergyData.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5flRSBCs5saF","executionInfo":{"status":"ok","timestamp":1697131374322,"user_tz":240,"elapsed":245,"user":{"displayName":"Aidan Kowolik","userId":"04765293928967826033"}},"outputId":"6a9af174-3fb0-4597-cb72-ffc3115a02a3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Entity                                                                 0\n","Year                                                                   0\n","Access to electricity (% of population)                               10\n","Access to clean fuels for cooking                                    169\n","Renewable-electricity-generating-capacity-per-capita                 931\n","Financial flows to developing countries (US $)                      2089\n","Renewable energy share in the total final energy consumption (%)     194\n","Electricity from fossil fuels (TWh)                                   21\n","Electricity from nuclear (TWh)                                       126\n","Electricity from renewables (TWh)                                     21\n","Low-carbon electricity (% electricity)                                42\n","Primary energy consumption per capita (kWh/person)                     0\n","Energy intensity level of primary energy (MJ/$2017 PPP GDP)          207\n","Value_co2_emissions_kt_by_country                                    428\n","Renewables (% equivalent primary energy)                            2137\n","gdp_growth                                                           317\n","gdp_per_capita                                                       282\n","Density\\n(P/Km2)                                                       1\n","Land Area(Km2)                                                         1\n","Latitude                                                               1\n","Longitude                                                              1\n","dtype: int64"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["SustainEnergyData_MissingValues = SustainEnergyData.isnull().sum() / SustainEnergyData.shape[0] * 100.00\n","print(round(SustainEnergyData_MissingValues),2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d-Tx5tRx5-KP","executionInfo":{"status":"ok","timestamp":1697131377923,"user_tz":240,"elapsed":246,"user":{"displayName":"Aidan Kowolik","userId":"04765293928967826033"}},"outputId":"8ed291e0-3364-4f90-c004-a6d5a9ee28dd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Entity                                                               0.0\n","Year                                                                 0.0\n","Access to electricity (% of population)                              0.0\n","Access to clean fuels for cooking                                    5.0\n","Renewable-electricity-generating-capacity-per-capita                26.0\n","Financial flows to developing countries (US $)                      57.0\n","Renewable energy share in the total final energy consumption (%)     5.0\n","Electricity from fossil fuels (TWh)                                  1.0\n","Electricity from nuclear (TWh)                                       3.0\n","Electricity from renewables (TWh)                                    1.0\n","Low-carbon electricity (% electricity)                               1.0\n","Primary energy consumption per capita (kWh/person)                   0.0\n","Energy intensity level of primary energy (MJ/$2017 PPP GDP)          6.0\n","Value_co2_emissions_kt_by_country                                   12.0\n","Renewables (% equivalent primary energy)                            59.0\n","gdp_growth                                                           9.0\n","gdp_per_capita                                                       8.0\n","Density\\n(P/Km2)                                                     0.0\n","Land Area(Km2)                                                       0.0\n","Latitude                                                             0.0\n","Longitude                                                            0.0\n","dtype: float64 2\n"]}]},{"cell_type":"code","source":["SustainEnergyData.isna().sum().plot(kind = 'bar')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":895},"id":"fGMA7KaZTcru","executionInfo":{"status":"ok","timestamp":1697222094575,"user_tz":240,"elapsed":432,"user":{"displayName":"Aidan Kowolik","userId":"04765293928967826033"}},"outputId":"cb9d2768-3885-44ba-c990-f7d491ad5e61"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":4},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["How it should be formatted:\n","\n","introduction/ abstract\n","\n","pargraph on where is in the landscape\n","\n","summarize docs that I've read. Not techniques but the research questions and related studies  \n","\n","the data set description\n","\n","data dictionary\n","\n","number of obs\n","missing value\n","\n","Histogram shows null values\n","\n","Data distribution in bar chart\n","\n","Records per year\n","\n","country breakdown\n","\n","Road map - can be vague but it has to be timeline\n","\n","\n","Also need to use pandas profiling from cind 119 python help sklearn tutorial\n","\n","---\n","\n"],"metadata":{"id":"olnXn039Son5"}},{"cell_type":"markdown","source":["# I am worried about the percentage if I am doing regression\n","\n","---\n","\n","\n"],"metadata":{"id":"kZZjxs5S6cfO"}},{"cell_type":"markdown","source":["Correlation to Check it"],"metadata":{"id":"OerOBLkI7nso"}},{"cell_type":"code","source":["SustainEnergyData.corr()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":943},"id":"a97tBEVi7tnb","executionInfo":{"status":"ok","timestamp":1697131998796,"user_tz":240,"elapsed":292,"user":{"displayName":"Aidan Kowolik","userId":"04765293928967826033"}},"outputId":"02992f1b-ff4b-42a1-fefd-7209b73c237c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-27-0c7c90599b61>:1: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  SustainEnergyData.corr()\n"]},{"output_type":"execute_result","data":{"text/plain":["                                                        Year  \\\n","Year                                                1.000000   \n","Access to electricity (% of population)             0.124890   \n","Access to clean fuels for cooking                   0.073292   \n","Renewable-electricity-generating-capacity-per-c...  0.104365   \n","Financial flows to developing countries (US $)      0.141820   \n","Renewable energy share in the total final energ... -0.029384   \n","Electricity from fossil fuels (TWh)                 0.032615   \n","Electricity from nuclear (TWh)                     -0.004820   \n","Electricity from renewables (TWh)                   0.073935   \n","Low-carbon electricity (% electricity)              0.030126   \n","Primary energy consumption per capita (kWh/person)  0.004196   \n","Energy intensity level of primary energy (MJ/$2... -0.161605   \n","Value_co2_emissions_kt_by_country                   0.024759   \n","Renewables (% equivalent primary energy)            0.104767   \n","gdp_growth                                         -0.192566   \n","gdp_per_capita                                      0.135399   \n","Land Area(Km2)                                     -0.001629   \n","Latitude                                            0.003507   \n","Longitude                                           0.000944   \n","\n","                                                    Access to electricity (% of population)  \\\n","Year                                                                               0.124890   \n","Access to electricity (% of population)                                            1.000000   \n","Access to clean fuels for cooking                                                  0.866554   \n","Renewable-electricity-generating-capacity-per-c...                                 0.270423   \n","Financial flows to developing countries (US $)                                     0.060478   \n","Renewable energy share in the total final energ...                                -0.784514   \n","Electricity from fossil fuels (TWh)                                                0.123999   \n","Electricity from nuclear (TWh)                                                     0.128713   \n","Electricity from renewables (TWh)                                                  0.138057   \n","Low-carbon electricity (% electricity)                                            -0.151062   \n","Primary energy consumption per capita (kWh/person)                                 0.454870   \n","Energy intensity level of primary energy (MJ/$2...                                -0.252949   \n","Value_co2_emissions_kt_by_country                                                  0.126988   \n","Renewables (% equivalent primary energy)                                           0.058195   \n","gdp_growth                                                                        -0.112071   \n","gdp_per_capita                                                                     0.418459   \n","Land Area(Km2)                                                                     0.054964   \n","Latitude                                                                           0.420548   \n","Longitude                                                                         -0.102857   \n","\n","                                                    Access to clean fuels for cooking  \\\n","Year                                                                         0.073292   \n","Access to electricity (% of population)                                      0.866554   \n","Access to clean fuels for cooking                                            1.000000   \n","Renewable-electricity-generating-capacity-per-c...                           0.227962   \n","Financial flows to developing countries (US $)                               0.042204   \n","Renewable energy share in the total final energ...                          -0.791740   \n","Electricity from fossil fuels (TWh)                                          0.100752   \n","Electricity from nuclear (TWh)                                               0.163473   \n","Electricity from renewables (TWh)                                            0.124486   \n","Low-carbon electricity (% electricity)                                      -0.120110   \n","Primary energy consumption per capita (kWh/person)                           0.551347   \n","Energy intensity level of primary energy (MJ/$2...                          -0.194884   \n","Value_co2_emissions_kt_by_country                                            0.095629   \n","Renewables (% equivalent primary energy)                                     0.063131   \n","gdp_growth                                                                  -0.145301   \n","gdp_per_capita                                                               0.545165   \n","Land Area(Km2)                                                               0.074630   \n","Latitude                                                                     0.432700   \n","Longitude                                                                   -0.131847   \n","\n","                                                    Renewable-electricity-generating-capacity-per-capita  \\\n","Year                                                                                         0.104365      \n","Access to electricity (% of population)                                                      0.270423      \n","Access to clean fuels for cooking                                                            0.227962      \n","Renewable-electricity-generating-capacity-per-c...                                           1.000000      \n","Financial flows to developing countries (US $)                                               0.003677      \n","Renewable energy share in the total final energ...                                           0.054821      \n","Electricity from fossil fuels (TWh)                                                          0.051483      \n","Electricity from nuclear (TWh)                                                               0.080168      \n","Electricity from renewables (TWh)                                                            0.147768      \n","Low-carbon electricity (% electricity)                                                       0.427264      \n","Primary energy consumption per capita (kWh/person)                                           0.000290      \n","Energy intensity level of primary energy (MJ/$2...                                          -0.056445      \n","Value_co2_emissions_kt_by_country                                                            0.046755      \n","Renewables (% equivalent primary energy)                                                     0.718511      \n","gdp_growth                                                                                  -0.013462      \n","gdp_per_capita                                                                               0.017266      \n","Land Area(Km2)                                                                               0.070355      \n","Latitude                                                                                    -0.041691      \n","Longitude                                                                                   -0.025587      \n","\n","                                                    Financial flows to developing countries (US $)  \\\n","Year                                                                                      0.141820   \n","Access to electricity (% of population)                                                   0.060478   \n","Access to clean fuels for cooking                                                         0.042204   \n","Renewable-electricity-generating-capacity-per-c...                                        0.003677   \n","Financial flows to developing countries (US $)                                            1.000000   \n","Renewable energy share in the total final energ...                                       -0.005519   \n","Electricity from fossil fuels (TWh)                                                       0.139238   \n","Electricity from nuclear (TWh)                                                            0.127840   \n","Electricity from renewables (TWh)                                                         0.122362   \n","Low-carbon electricity (% electricity)                                                   -0.002716   \n","Primary energy consumption per capita (kWh/person)                                        0.009860   \n","Energy intensity level of primary energy (MJ/$2...                                       -0.004231   \n","Value_co2_emissions_kt_by_country                                                         0.126609   \n","Renewables (% equivalent primary energy)                                                 -0.023016   \n","gdp_growth                                                                                0.003324   \n","gdp_per_capita                                                                            0.067525   \n","Land Area(Km2)                                                                            0.141528   \n","Latitude                                                                                  0.021782   \n","Longitude                                                                                 0.029141   \n","\n","                                                    Renewable energy share in the total final energy consumption (%)  \\\n","Year                                                                                        -0.029384                  \n","Access to electricity (% of population)                                                     -0.784514                  \n","Access to clean fuels for cooking                                                           -0.791740                  \n","Renewable-electricity-generating-capacity-per-c...                                           0.054821                  \n","Financial flows to developing countries (US $)                                              -0.005519                  \n","Renewable energy share in the total final energ...                                           1.000000                  \n","Electricity from fossil fuels (TWh)                                                         -0.134888                  \n","Electricity from nuclear (TWh)                                                              -0.136525                  \n","Electricity from renewables (TWh)                                                           -0.068779                  \n","Low-carbon electricity (% electricity)                                                       0.467862                  \n","Primary energy consumption per capita (kWh/person)                                          -0.429362                  \n","Energy intensity level of primary energy (MJ/$2...                                           0.247050                  \n","Value_co2_emissions_kt_by_country                                                           -0.132715                  \n","Renewables (% equivalent primary energy)                                                     0.768166                  \n","gdp_growth                                                                                   0.075236                  \n","gdp_per_capita                                                                              -0.370648                  \n","Land Area(Km2)                                                                              -0.045395                  \n","Latitude                                                                                    -0.330140                  \n","Longitude                                                                                    0.018284                  \n","\n","                                                    Electricity from fossil fuels (TWh)  \\\n","Year                                                                           0.032615   \n","Access to electricity (% of population)                                        0.123999   \n","Access to clean fuels for cooking                                              0.100752   \n","Renewable-electricity-generating-capacity-per-c...                             0.051483   \n","Financial flows to developing countries (US $)                                 0.139238   \n","Renewable energy share in the total final energ...                            -0.134888   \n","Electricity from fossil fuels (TWh)                                            1.000000   \n","Electricity from nuclear (TWh)                                                 0.646716   \n","Electricity from renewables (TWh)                                              0.845067   \n","Low-carbon electricity (% electricity)                                        -0.063773   \n","Primary energy consumption per capita (kWh/person)                             0.105529   \n","Energy intensity level of primary energy (MJ/$2...                             0.030998   \n","Value_co2_emissions_kt_by_country                                              0.989741   \n","Renewables (% equivalent primary energy)                                      -0.088586   \n","gdp_growth                                                                     0.020956   \n","gdp_per_capita                                                                 0.107793   \n","Land Area(Km2)                                                                 0.627682   \n","Latitude                                                                       0.110994   \n","Longitude                                                                      0.045413   \n","\n","                                                    Electricity from nuclear (TWh)  \\\n","Year                                                                     -0.004820   \n","Access to electricity (% of population)                                   0.128713   \n","Access to clean fuels for cooking                                         0.163473   \n","Renewable-electricity-generating-capacity-per-c...                        0.080168   \n","Financial flows to developing countries (US $)                            0.127840   \n","Renewable energy share in the total final energ...                       -0.136525   \n","Electricity from fossil fuels (TWh)                                       0.646716   \n","Electricity from nuclear (TWh)                                            1.000000   \n","Electricity from renewables (TWh)                                         0.492011   \n","Low-carbon electricity (% electricity)                                    0.071715   \n","Primary energy consumption per capita (kWh/person)                        0.180833   \n","Energy intensity level of primary energy (MJ/$2...                       -0.007496   \n","Value_co2_emissions_kt_by_country                                         0.598495   \n","Renewables (% equivalent primary energy)                                 -0.057667   \n","gdp_growth                                                               -0.048455   \n","gdp_per_capita                                                            0.231349   \n","Land Area(Km2)                                                            0.473280   \n","Latitude                                                                  0.177961   \n","Longitude                                                                -0.087111   \n","\n","                                                    Electricity from renewables (TWh)  \\\n","Year                                                                         0.073935   \n","Access to electricity (% of population)                                      0.138057   \n","Access to clean fuels for cooking                                            0.124486   \n","Renewable-electricity-generating-capacity-per-c...                           0.147768   \n","Financial flows to developing countries (US $)                               0.122362   \n","Renewable energy share in the total final energ...                          -0.068779   \n","Electricity from fossil fuels (TWh)                                          0.845067   \n","Electricity from nuclear (TWh)                                               0.492011   \n","Electricity from renewables (TWh)                                            1.000000   \n","Low-carbon electricity (% electricity)                                       0.091451   \n","Primary energy consumption per capita (kWh/person)                           0.119760   \n","Energy intensity level of primary energy (MJ/$2...                           0.009425   \n","Value_co2_emissions_kt_by_country                                            0.856270   \n","Renewables (% equivalent primary energy)                                     0.166374   \n","gdp_growth                                                                  -0.002531   \n","gdp_per_capita                                                               0.139674   \n","Land Area(Km2)                                                               0.704884   \n","Latitude                                                                     0.112833   \n","Longitude                                                                   -0.016380   \n","\n","                                                    Low-carbon electricity (% electricity)  \\\n","Year                                                                              0.030126   \n","Access to electricity (% of population)                                          -0.151062   \n","Access to clean fuels for cooking                                                -0.120110   \n","Renewable-electricity-generating-capacity-per-c...                                0.427264   \n","Financial flows to developing countries (US $)                                   -0.002716   \n","Renewable energy share in the total final energ...                                0.467862   \n","Electricity from fossil fuels (TWh)                                              -0.063773   \n","Electricity from nuclear (TWh)                                                    0.071715   \n","Electricity from renewables (TWh)                                                 0.091451   \n","Low-carbon electricity (% electricity)                                            1.000000   \n","Primary energy consumption per capita (kWh/person)                               -0.119386   \n","Energy intensity level of primary energy (MJ/$2...                                0.047489   \n","Value_co2_emissions_kt_by_country                                                -0.054515   \n","Renewables (% equivalent primary energy)                                          0.782388   \n","gdp_growth                                                                       -0.015196   \n","gdp_per_capita                                                                    0.007945   \n","Land Area(Km2)                                                                    0.044866   \n","Latitude                                                                         -0.029134   \n","Longitude                                                                        -0.045336   \n","\n","                                                    Primary energy consumption per capita (kWh/person)  \\\n","Year                                                                                         0.004196    \n","Access to electricity (% of population)                                                      0.454870    \n","Access to clean fuels for cooking                                                            0.551347    \n","Renewable-electricity-generating-capacity-per-c...                                           0.000290    \n","Financial flows to developing countries (US $)                                               0.009860    \n","Renewable energy share in the total final energ...                                          -0.429362    \n","Electricity from fossil fuels (TWh)                                                          0.105529    \n","Electricity from nuclear (TWh)                                                               0.180833    \n","Electricity from renewables (TWh)                                                            0.119760    \n","Low-carbon electricity (% electricity)                                                      -0.119386    \n","Primary energy consumption per capita (kWh/person)                                           1.000000    \n","Energy intensity level of primary energy (MJ/$2...                                           0.137876    \n","Value_co2_emissions_kt_by_country                                                            0.095683    \n","Renewables (% equivalent primary energy)                                                     0.130623    \n","gdp_growth                                                                                  -0.035434    \n","gdp_per_capita                                                                               0.667172    \n","Land Area(Km2)                                                                               0.114661    \n","Latitude                                                                                     0.329893    \n","Longitude                                                                                    0.039724    \n","\n","                                                    Energy intensity level of primary energy (MJ/$2017 PPP GDP)  \\\n","Year                                                                                        -0.161605             \n","Access to electricity (% of population)                                                     -0.252949             \n","Access to clean fuels for cooking                                                           -0.194884             \n","Renewable-electricity-generating-capacity-per-c...                                          -0.056445             \n","Financial flows to developing countries (US $)                                              -0.004231             \n","Renewable energy share in the total final energ...                                           0.247050             \n","Electricity from fossil fuels (TWh)                                                          0.030998             \n","Electricity from nuclear (TWh)                                                              -0.007496             \n","Electricity from renewables (TWh)                                                            0.009425             \n","Low-carbon electricity (% electricity)                                                       0.047489             \n","Primary energy consumption per capita (kWh/person)                                           0.137876             \n","Energy intensity level of primary energy (MJ/$2...                                           1.000000             \n","Value_co2_emissions_kt_by_country                                                            0.039128             \n","Renewables (% equivalent primary energy)                                                    -0.106122             \n","gdp_growth                                                                                   0.079293             \n","gdp_per_capita                                                                              -0.184681             \n","Land Area(Km2)                                                                               0.071686             \n","Latitude                                                                                    -0.014179             \n","Longitude                                                                                    0.135104             \n","\n","                                                    Value_co2_emissions_kt_by_country  \\\n","Year                                                                         0.024759   \n","Access to electricity (% of population)                                      0.126988   \n","Access to clean fuels for cooking                                            0.095629   \n","Renewable-electricity-generating-capacity-per-c...                           0.046755   \n","Financial flows to developing countries (US $)                               0.126609   \n","Renewable energy share in the total final energ...                          -0.132715   \n","Electricity from fossil fuels (TWh)                                          0.989741   \n","Electricity from nuclear (TWh)                                               0.598495   \n","Electricity from renewables (TWh)                                            0.856270   \n","Low-carbon electricity (% electricity)                                      -0.054515   \n","Primary energy consumption per capita (kWh/person)                           0.095683   \n","Energy intensity level of primary energy (MJ/$2...                           0.039128   \n","Value_co2_emissions_kt_by_country                                            1.000000   \n","Renewables (% equivalent primary energy)                                    -0.073735   \n","gdp_growth                                                                   0.031523   \n","gdp_per_capita                                                               0.098209   \n","Land Area(Km2)                                                               0.653732   \n","Latitude                                                                     0.115571   \n","Longitude                                                                    0.036286   \n","\n","                                                    Renewables (% equivalent primary energy)  \\\n","Year                                                                                0.104767   \n","Access to electricity (% of population)                                             0.058195   \n","Access to clean fuels for cooking                                                   0.063131   \n","Renewable-electricity-generating-capacity-per-c...                                  0.718511   \n","Financial flows to developing countries (US $)                                     -0.023016   \n","Renewable energy share in the total final energ...                                  0.768166   \n","Electricity from fossil fuels (TWh)                                                -0.088586   \n","Electricity from nuclear (TWh)                                                     -0.057667   \n","Electricity from renewables (TWh)                                                   0.166374   \n","Low-carbon electricity (% electricity)                                              0.782388   \n","Primary energy consumption per capita (kWh/person)                                  0.130623   \n","Energy intensity level of primary energy (MJ/$2...                                 -0.106122   \n","Value_co2_emissions_kt_by_country                                                  -0.073735   \n","Renewables (% equivalent primary energy)                                            1.000000   \n","gdp_growth                                                                         -0.140636   \n","gdp_per_capita                                                                      0.292454   \n","Land Area(Km2)                                                                      0.083376   \n","Latitude                                                                            0.043961   \n","Longitude                                                                          -0.254428   \n","\n","                                                    gdp_growth  \\\n","Year                                                 -0.192566   \n","Access to electricity (% of population)              -0.112071   \n","Access to clean fuels for cooking                    -0.145301   \n","Renewable-electricity-generating-capacity-per-c...   -0.013462   \n","Financial flows to developing countries (US $)        0.003324   \n","Renewable energy share in the total final energ...    0.075236   \n","Electricity from fossil fuels (TWh)                   0.020956   \n","Electricity from nuclear (TWh)                       -0.048455   \n","Electricity from renewables (TWh)                    -0.002531   \n","Low-carbon electricity (% electricity)               -0.015196   \n","Primary energy consumption per capita (kWh/person)   -0.035434   \n","Energy intensity level of primary energy (MJ/$2...    0.079293   \n","Value_co2_emissions_kt_by_country                     0.031523   \n","Renewables (% equivalent primary energy)             -0.140636   \n","gdp_growth                                            1.000000   \n","gdp_per_capita                                       -0.128093   \n","Land Area(Km2)                                        0.025588   \n","Latitude                                             -0.010859   \n","Longitude                                             0.117680   \n","\n","                                                    gdp_per_capita  \\\n","Year                                                      0.135399   \n","Access to electricity (% of population)                   0.418459   \n","Access to clean fuels for cooking                         0.545165   \n","Renewable-electricity-generating-capacity-per-c...        0.017266   \n","Financial flows to developing countries (US $)            0.067525   \n","Renewable energy share in the total final energ...       -0.370648   \n","Electricity from fossil fuels (TWh)                       0.107793   \n","Electricity from nuclear (TWh)                            0.231349   \n","Electricity from renewables (TWh)                         0.139674   \n","Low-carbon electricity (% electricity)                    0.007945   \n","Primary energy consumption per capita (kWh/person)        0.667172   \n","Energy intensity level of primary energy (MJ/$2...       -0.184681   \n","Value_co2_emissions_kt_by_country                         0.098209   \n","Renewables (% equivalent primary energy)                  0.292454   \n","gdp_growth                                               -0.128093   \n","gdp_per_capita                                            1.000000   \n","Land Area(Km2)                                            0.078850   \n","Latitude                                                  0.382121   \n","Longitude                                                -0.013789   \n","\n","                                                    Land Area(Km2)  Latitude  \\\n","Year                                                     -0.001629  0.003507   \n","Access to electricity (% of population)                   0.054964  0.420548   \n","Access to clean fuels for cooking                         0.074630  0.432700   \n","Renewable-electricity-generating-capacity-per-c...        0.070355 -0.041691   \n","Financial flows to developing countries (US $)            0.141528  0.021782   \n","Renewable energy share in the total final energ...       -0.045395 -0.330140   \n","Electricity from fossil fuels (TWh)                       0.627682  0.110994   \n","Electricity from nuclear (TWh)                            0.473280  0.177961   \n","Electricity from renewables (TWh)                         0.704884  0.112833   \n","Low-carbon electricity (% electricity)                    0.044866 -0.029134   \n","Primary energy consumption per capita (kWh/person)        0.114661  0.329893   \n","Energy intensity level of primary energy (MJ/$2...        0.071686 -0.014179   \n","Value_co2_emissions_kt_by_country                         0.653732  0.115571   \n","Renewables (% equivalent primary energy)                  0.083376  0.043961   \n","gdp_growth                                                0.025588 -0.010859   \n","gdp_per_capita                                            0.078850  0.382121   \n","Land Area(Km2)                                            1.000000 -0.021608   \n","Latitude                                                 -0.021608  1.000000   \n","Longitude                                                -0.032837 -0.016475   \n","\n","                                                    Longitude  \n","Year                                                 0.000944  \n","Access to electricity (% of population)             -0.102857  \n","Access to clean fuels for cooking                   -0.131847  \n","Renewable-electricity-generating-capacity-per-c...  -0.025587  \n","Financial flows to developing countries (US $)       0.029141  \n","Renewable energy share in the total final energ...   0.018284  \n","Electricity from fossil fuels (TWh)                  0.045413  \n","Electricity from nuclear (TWh)                      -0.087111  \n","Electricity from renewables (TWh)                   -0.016380  \n","Low-carbon electricity (% electricity)              -0.045336  \n","Primary energy consumption per capita (kWh/person)   0.039724  \n","Energy intensity level of primary energy (MJ/$2...   0.135104  \n","Value_co2_emissions_kt_by_country                    0.036286  \n","Renewables (% equivalent primary energy)            -0.254428  \n","gdp_growth                                           0.117680  \n","gdp_per_capita                                      -0.013789  \n","Land Area(Km2)                                      -0.032837  \n","Latitude                                            -0.016475  \n","Longitude                                            1.000000  "],"text/html":["\n","  <div id=\"df-3fd4165e-6b67-46d4-ab41-40d64402cc17\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Access to electricity (% of population)</th>\n","      <th>Access to clean fuels for cooking</th>\n","      <th>Renewable-electricity-generating-capacity-per-capita</th>\n","      <th>Financial flows to developing countries (US $)</th>\n","      <th>Renewable energy share in the total final energy consumption (%)</th>\n","      <th>Electricity from fossil fuels (TWh)</th>\n","      <th>Electricity from nuclear (TWh)</th>\n","      <th>Electricity from renewables (TWh)</th>\n","      <th>Low-carbon electricity (% electricity)</th>\n","      <th>Primary energy consumption per capita (kWh/person)</th>\n","      <th>Energy intensity level of primary energy (MJ/$2017 PPP GDP)</th>\n","      <th>Value_co2_emissions_kt_by_country</th>\n","      <th>Renewables (% equivalent primary energy)</th>\n","      <th>gdp_growth</th>\n","      <th>gdp_per_capita</th>\n","      <th>Land Area(Km2)</th>\n","      <th>Latitude</th>\n","      <th>Longitude</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Year</th>\n","      <td>1.000000</td>\n","      <td>0.124890</td>\n","      <td>0.073292</td>\n","      <td>0.104365</td>\n","      <td>0.141820</td>\n","      <td>-0.029384</td>\n","      <td>0.032615</td>\n","      <td>-0.004820</td>\n","      <td>0.073935</td>\n","      <td>0.030126</td>\n","      <td>0.004196</td>\n","      <td>-0.161605</td>\n","      <td>0.024759</td>\n","      <td>0.104767</td>\n","      <td>-0.192566</td>\n","      <td>0.135399</td>\n","      <td>-0.001629</td>\n","      <td>0.003507</td>\n","      <td>0.000944</td>\n","    </tr>\n","    <tr>\n","      <th>Access to electricity (% of population)</th>\n","      <td>0.124890</td>\n","      <td>1.000000</td>\n","      <td>0.866554</td>\n","      <td>0.270423</td>\n","      <td>0.060478</td>\n","      <td>-0.784514</td>\n","      <td>0.123999</td>\n","      <td>0.128713</td>\n","      <td>0.138057</td>\n","      <td>-0.151062</td>\n","      <td>0.454870</td>\n","      <td>-0.252949</td>\n","      <td>0.126988</td>\n","      <td>0.058195</td>\n","      <td>-0.112071</td>\n","      <td>0.418459</td>\n","      <td>0.054964</td>\n","      <td>0.420548</td>\n","      <td>-0.102857</td>\n","    </tr>\n","    <tr>\n","      <th>Access to clean fuels for cooking</th>\n","      <td>0.073292</td>\n","      <td>0.866554</td>\n","      <td>1.000000</td>\n","      <td>0.227962</td>\n","      <td>0.042204</td>\n","      <td>-0.791740</td>\n","      <td>0.100752</td>\n","      <td>0.163473</td>\n","      <td>0.124486</td>\n","      <td>-0.120110</td>\n","      <td>0.551347</td>\n","      <td>-0.194884</td>\n","      <td>0.095629</td>\n","      <td>0.063131</td>\n","      <td>-0.145301</td>\n","      <td>0.545165</td>\n","      <td>0.074630</td>\n","      <td>0.432700</td>\n","      <td>-0.131847</td>\n","    </tr>\n","    <tr>\n","      <th>Renewable-electricity-generating-capacity-per-capita</th>\n","      <td>0.104365</td>\n","      <td>0.270423</td>\n","      <td>0.227962</td>\n","      <td>1.000000</td>\n","      <td>0.003677</td>\n","      <td>0.054821</td>\n","      <td>0.051483</td>\n","      <td>0.080168</td>\n","      <td>0.147768</td>\n","      <td>0.427264</td>\n","      <td>0.000290</td>\n","      <td>-0.056445</td>\n","      <td>0.046755</td>\n","      <td>0.718511</td>\n","      <td>-0.013462</td>\n","      <td>0.017266</td>\n","      <td>0.070355</td>\n","      <td>-0.041691</td>\n","      <td>-0.025587</td>\n","    </tr>\n","    <tr>\n","      <th>Financial flows to developing countries (US $)</th>\n","      <td>0.141820</td>\n","      <td>0.060478</td>\n","      <td>0.042204</td>\n","      <td>0.003677</td>\n","      <td>1.000000</td>\n","      <td>-0.005519</td>\n","      <td>0.139238</td>\n","      <td>0.127840</td>\n","      <td>0.122362</td>\n","      <td>-0.002716</td>\n","      <td>0.009860</td>\n","      <td>-0.004231</td>\n","      <td>0.126609</td>\n","      <td>-0.023016</td>\n","      <td>0.003324</td>\n","      <td>0.067525</td>\n","      <td>0.141528</td>\n","      <td>0.021782</td>\n","      <td>0.029141</td>\n","    </tr>\n","    <tr>\n","      <th>Renewable energy share in the total final energy consumption (%)</th>\n","      <td>-0.029384</td>\n","      <td>-0.784514</td>\n","      <td>-0.791740</td>\n","      <td>0.054821</td>\n","      <td>-0.005519</td>\n","      <td>1.000000</td>\n","      <td>-0.134888</td>\n","      <td>-0.136525</td>\n","      <td>-0.068779</td>\n","      <td>0.467862</td>\n","      <td>-0.429362</td>\n","      <td>0.247050</td>\n","      <td>-0.132715</td>\n","      <td>0.768166</td>\n","      <td>0.075236</td>\n","      <td>-0.370648</td>\n","      <td>-0.045395</td>\n","      <td>-0.330140</td>\n","      <td>0.018284</td>\n","    </tr>\n","    <tr>\n","      <th>Electricity from fossil fuels (TWh)</th>\n","      <td>0.032615</td>\n","      <td>0.123999</td>\n","      <td>0.100752</td>\n","      <td>0.051483</td>\n","      <td>0.139238</td>\n","      <td>-0.134888</td>\n","      <td>1.000000</td>\n","      <td>0.646716</td>\n","      <td>0.845067</td>\n","      <td>-0.063773</td>\n","      <td>0.105529</td>\n","      <td>0.030998</td>\n","      <td>0.989741</td>\n","      <td>-0.088586</td>\n","      <td>0.020956</td>\n","      <td>0.107793</td>\n","      <td>0.627682</td>\n","      <td>0.110994</td>\n","      <td>0.045413</td>\n","    </tr>\n","    <tr>\n","      <th>Electricity from nuclear (TWh)</th>\n","      <td>-0.004820</td>\n","      <td>0.128713</td>\n","      <td>0.163473</td>\n","      <td>0.080168</td>\n","      <td>0.127840</td>\n","      <td>-0.136525</td>\n","      <td>0.646716</td>\n","      <td>1.000000</td>\n","      <td>0.492011</td>\n","      <td>0.071715</td>\n","      <td>0.180833</td>\n","      <td>-0.007496</td>\n","      <td>0.598495</td>\n","      <td>-0.057667</td>\n","      <td>-0.048455</td>\n","      <td>0.231349</td>\n","      <td>0.473280</td>\n","      <td>0.177961</td>\n","      <td>-0.087111</td>\n","    </tr>\n","    <tr>\n","      <th>Electricity from renewables (TWh)</th>\n","      <td>0.073935</td>\n","      <td>0.138057</td>\n","      <td>0.124486</td>\n","      <td>0.147768</td>\n","      <td>0.122362</td>\n","      <td>-0.068779</td>\n","      <td>0.845067</td>\n","      <td>0.492011</td>\n","      <td>1.000000</td>\n","      <td>0.091451</td>\n","      <td>0.119760</td>\n","      <td>0.009425</td>\n","      <td>0.856270</td>\n","      <td>0.166374</td>\n","      <td>-0.002531</td>\n","      <td>0.139674</td>\n","      <td>0.704884</td>\n","      <td>0.112833</td>\n","      <td>-0.016380</td>\n","    </tr>\n","    <tr>\n","      <th>Low-carbon electricity (% electricity)</th>\n","      <td>0.030126</td>\n","      <td>-0.151062</td>\n","      <td>-0.120110</td>\n","      <td>0.427264</td>\n","      <td>-0.002716</td>\n","      <td>0.467862</td>\n","      <td>-0.063773</td>\n","      <td>0.071715</td>\n","      <td>0.091451</td>\n","      <td>1.000000</td>\n","      <td>-0.119386</td>\n","      <td>0.047489</td>\n","      <td>-0.054515</td>\n","      <td>0.782388</td>\n","      <td>-0.015196</td>\n","      <td>0.007945</td>\n","      <td>0.044866</td>\n","      <td>-0.029134</td>\n","      <td>-0.045336</td>\n","    </tr>\n","    <tr>\n","      <th>Primary energy consumption per capita (kWh/person)</th>\n","      <td>0.004196</td>\n","      <td>0.454870</td>\n","      <td>0.551347</td>\n","      <td>0.000290</td>\n","      <td>0.009860</td>\n","      <td>-0.429362</td>\n","      <td>0.105529</td>\n","      <td>0.180833</td>\n","      <td>0.119760</td>\n","      <td>-0.119386</td>\n","      <td>1.000000</td>\n","      <td>0.137876</td>\n","      <td>0.095683</td>\n","      <td>0.130623</td>\n","      <td>-0.035434</td>\n","      <td>0.667172</td>\n","      <td>0.114661</td>\n","      <td>0.329893</td>\n","      <td>0.039724</td>\n","    </tr>\n","    <tr>\n","      <th>Energy intensity level of primary energy (MJ/$2017 PPP GDP)</th>\n","      <td>-0.161605</td>\n","      <td>-0.252949</td>\n","      <td>-0.194884</td>\n","      <td>-0.056445</td>\n","      <td>-0.004231</td>\n","      <td>0.247050</td>\n","      <td>0.030998</td>\n","      <td>-0.007496</td>\n","      <td>0.009425</td>\n","      <td>0.047489</td>\n","      <td>0.137876</td>\n","      <td>1.000000</td>\n","      <td>0.039128</td>\n","      <td>-0.106122</td>\n","      <td>0.079293</td>\n","      <td>-0.184681</td>\n","      <td>0.071686</td>\n","      <td>-0.014179</td>\n","      <td>0.135104</td>\n","    </tr>\n","    <tr>\n","      <th>Value_co2_emissions_kt_by_country</th>\n","      <td>0.024759</td>\n","      <td>0.126988</td>\n","      <td>0.095629</td>\n","      <td>0.046755</td>\n","      <td>0.126609</td>\n","      <td>-0.132715</td>\n","      <td>0.989741</td>\n","      <td>0.598495</td>\n","      <td>0.856270</td>\n","      <td>-0.054515</td>\n","      <td>0.095683</td>\n","      <td>0.039128</td>\n","      <td>1.000000</td>\n","      <td>-0.073735</td>\n","      <td>0.031523</td>\n","      <td>0.098209</td>\n","      <td>0.653732</td>\n","      <td>0.115571</td>\n","      <td>0.036286</td>\n","    </tr>\n","    <tr>\n","      <th>Renewables (% equivalent primary energy)</th>\n","      <td>0.104767</td>\n","      <td>0.058195</td>\n","      <td>0.063131</td>\n","      <td>0.718511</td>\n","      <td>-0.023016</td>\n","      <td>0.768166</td>\n","      <td>-0.088586</td>\n","      <td>-0.057667</td>\n","      <td>0.166374</td>\n","      <td>0.782388</td>\n","      <td>0.130623</td>\n","      <td>-0.106122</td>\n","      <td>-0.073735</td>\n","      <td>1.000000</td>\n","      <td>-0.140636</td>\n","      <td>0.292454</td>\n","      <td>0.083376</td>\n","      <td>0.043961</td>\n","      <td>-0.254428</td>\n","    </tr>\n","    <tr>\n","      <th>gdp_growth</th>\n","      <td>-0.192566</td>\n","      <td>-0.112071</td>\n","      <td>-0.145301</td>\n","      <td>-0.013462</td>\n","      <td>0.003324</td>\n","      <td>0.075236</td>\n","      <td>0.020956</td>\n","      <td>-0.048455</td>\n","      <td>-0.002531</td>\n","      <td>-0.015196</td>\n","      <td>-0.035434</td>\n","      <td>0.079293</td>\n","      <td>0.031523</td>\n","      <td>-0.140636</td>\n","      <td>1.000000</td>\n","      <td>-0.128093</td>\n","      <td>0.025588</td>\n","      <td>-0.010859</td>\n","      <td>0.117680</td>\n","    </tr>\n","    <tr>\n","      <th>gdp_per_capita</th>\n","      <td>0.135399</td>\n","      <td>0.418459</td>\n","      <td>0.545165</td>\n","      <td>0.017266</td>\n","      <td>0.067525</td>\n","      <td>-0.370648</td>\n","      <td>0.107793</td>\n","      <td>0.231349</td>\n","      <td>0.139674</td>\n","      <td>0.007945</td>\n","      <td>0.667172</td>\n","      <td>-0.184681</td>\n","      <td>0.098209</td>\n","      <td>0.292454</td>\n","      <td>-0.128093</td>\n","      <td>1.000000</td>\n","      <td>0.078850</td>\n","      <td>0.382121</td>\n","      <td>-0.013789</td>\n","    </tr>\n","    <tr>\n","      <th>Land Area(Km2)</th>\n","      <td>-0.001629</td>\n","      <td>0.054964</td>\n","      <td>0.074630</td>\n","      <td>0.070355</td>\n","      <td>0.141528</td>\n","      <td>-0.045395</td>\n","      <td>0.627682</td>\n","      <td>0.473280</td>\n","      <td>0.704884</td>\n","      <td>0.044866</td>\n","      <td>0.114661</td>\n","      <td>0.071686</td>\n","      <td>0.653732</td>\n","      <td>0.083376</td>\n","      <td>0.025588</td>\n","      <td>0.078850</td>\n","      <td>1.000000</td>\n","      <td>-0.021608</td>\n","      <td>-0.032837</td>\n","    </tr>\n","    <tr>\n","      <th>Latitude</th>\n","      <td>0.003507</td>\n","      <td>0.420548</td>\n","      <td>0.432700</td>\n","      <td>-0.041691</td>\n","      <td>0.021782</td>\n","      <td>-0.330140</td>\n","      <td>0.110994</td>\n","      <td>0.177961</td>\n","      <td>0.112833</td>\n","      <td>-0.029134</td>\n","      <td>0.329893</td>\n","      <td>-0.014179</td>\n","      <td>0.115571</td>\n","      <td>0.043961</td>\n","      <td>-0.010859</td>\n","      <td>0.382121</td>\n","      <td>-0.021608</td>\n","      <td>1.000000</td>\n","      <td>-0.016475</td>\n","    </tr>\n","    <tr>\n","      <th>Longitude</th>\n","      <td>0.000944</td>\n","      <td>-0.102857</td>\n","      <td>-0.131847</td>\n","      <td>-0.025587</td>\n","      <td>0.029141</td>\n","      <td>0.018284</td>\n","      <td>0.045413</td>\n","      <td>-0.087111</td>\n","      <td>-0.016380</td>\n","      <td>-0.045336</td>\n","      <td>0.039724</td>\n","      <td>0.135104</td>\n","      <td>0.036286</td>\n","      <td>-0.254428</td>\n","      <td>0.117680</td>\n","      <td>-0.013789</td>\n","      <td>-0.032837</td>\n","      <td>-0.016475</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3fd4165e-6b67-46d4-ab41-40d64402cc17')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3fd4165e-6b67-46d4-ab41-40d64402cc17 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3fd4165e-6b67-46d4-ab41-40d64402cc17');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1f59bbda-38a0-4438-add7-19116eadcecc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1f59bbda-38a0-4438-add7-19116eadcecc')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1f59bbda-38a0-4438-add7-19116eadcecc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["SustainEnergyData.corr()['Value_co2_emissions_kt_by_country']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"liVWWYmH86ap","executionInfo":{"status":"ok","timestamp":1697133271598,"user_tz":240,"elapsed":242,"user":{"displayName":"Aidan Kowolik","userId":"04765293928967826033"}},"outputId":"9f2cb44e-fdee-40ac-80bf-17ecee3cb5fd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-32-11ddfee2ab63>:1: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  SustainEnergyData.corr()['Value_co2_emissions_kt_by_country']\n"]},{"output_type":"execute_result","data":{"text/plain":["Year                                                                0.024759\n","Access to electricity (% of population)                             0.126988\n","Access to clean fuels for cooking                                   0.095629\n","Renewable-electricity-generating-capacity-per-capita                0.046755\n","Financial flows to developing countries (US $)                      0.126609\n","Renewable energy share in the total final energy consumption (%)   -0.132715\n","Electricity from fossil fuels (TWh)                                 0.989741\n","Electricity from nuclear (TWh)                                      0.598495\n","Electricity from renewables (TWh)                                   0.856270\n","Low-carbon electricity (% electricity)                             -0.054515\n","Primary energy consumption per capita (kWh/person)                  0.095683\n","Energy intensity level of primary energy (MJ/$2017 PPP GDP)         0.039128\n","Value_co2_emissions_kt_by_country                                   1.000000\n","Renewables (% equivalent primary energy)                           -0.073735\n","gdp_growth                                                          0.031523\n","gdp_per_capita                                                      0.098209\n","Land Area(Km2)                                                      0.653732\n","Latitude                                                            0.115571\n","Longitude                                                           0.036286\n","Name: Value_co2_emissions_kt_by_country, dtype: float64"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["SustainEnergyData = SustainEnergyData.drop(columns= ['Latitude', 'Longitude'])\n","SustainEnergyData"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":338},"id":"bxRRhRYdCBD0","executionInfo":{"status":"error","timestamp":1697135855937,"user_tz":240,"elapsed":269,"user":{"displayName":"Aidan Kowolik","userId":"04765293928967826033"}},"outputId":"a4b8a31e-9ecf-4fa8-864c-9c8a60595b15"},"execution_count":null,"outputs":[{"output_type":"error","ename":"KeyError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-38-167a700036bf>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mSustainEnergyData\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSustainEnergyData\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m'Latitude'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'Longitude'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mSustainEnergyData\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    329\u001b[0m                     \u001b[0mstacklevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfind_stack_level\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    330\u001b[0m                 )\n\u001b[0;32m--> 331\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    332\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    333\u001b[0m         \u001b[0;31m# error: \"Callable[[VarArg(Any), KwArg(Any)], Any]\" has no\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   5397\u001b[0m                 \u001b[0mweight\u001b[0m  \u001b[0;36m1.0\u001b[0m     \u001b[0;36m0.8\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5398\u001b[0m         \"\"\"\n\u001b[0;32m-> 5399\u001b[0;31m         return super().drop(\n\u001b[0m\u001b[1;32m   5400\u001b[0m             \u001b[0mlabels\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5401\u001b[0m             \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    329\u001b[0m                     \u001b[0mstacklevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfind_stack_level\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    330\u001b[0m                 )\n\u001b[0;32m--> 331\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    332\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    333\u001b[0m         \u001b[0;31m# error: \"Callable[[VarArg(Any), KwArg(Any)], Any]\" has no\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   4503\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabels\u001b[0m \u001b[0;32min\u001b[0m \u001b[0maxes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4504\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mlabels\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4505\u001b[0;31m                 \u001b[0mobj\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_drop_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4506\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4507\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_drop_axis\u001b[0;34m(self, labels, axis, level, errors, only_slice)\u001b[0m\n\u001b[1;32m   4544\u001b[0m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4545\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4546\u001b[0;31m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4547\u001b[0m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_indexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_axis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4548\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, errors)\u001b[0m\n\u001b[1;32m   6932\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mmask\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0many\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6933\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0merrors\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;34m\"ignore\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6934\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"{list(labels[mask])} not found in axis\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6935\u001b[0m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6936\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdelete\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: \"['Latitude', 'Longitude'] not found in axis\""]}]},{"cell_type":"markdown","source":["Visual Showcase of Correlation\n"],"metadata":{"id":"y8VYA2k2PbRC"}},{"cell_type":"code","source":["corr_subset = SustainEnergyData.drop\n","corr_values ="],"metadata":{"id":"OqpLGaODP2a5"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Profiling"],"metadata":{"id":"DRONR2MLBM4b"}},{"cell_type":"code","source":["import sys\n","!{sys.executable} -m pip install -U pandas-profiling\n","!jupyter nbextension enable --py widgetsnbextension\n","!pip install matplotlib\n","!pip install graphviz"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2sVlP7nyBRqq","executionInfo":{"status":"ok","timestamp":1697234219345,"user_tz":240,"elapsed":61377,"user":{"displayName":"Aidan Kowolik","userId":"04765293928967826033"}},"outputId":"6d158c6c-cab5-4f6e-8642-5cd69bce69a3"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting pandas-profiling\n","  Downloading pandas_profiling-3.6.6-py2.py3-none-any.whl (324 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m324.4/324.4 kB\u001b[0m \u001b[31m6.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting ydata-profiling (from pandas-profiling)\n","  Downloading ydata_profiling-4.6.0-py2.py3-none-any.whl (357 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m357.5/357.5 kB\u001b[0m \u001b[31m31.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: scipy<1.12,>=1.4.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (1.11.3)\n","Requirement already satisfied: pandas!=1.4.0,<2.1,>1.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (1.5.3)\n","Requirement already satisfied: matplotlib<=3.7.3,>=3.2 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (3.7.1)\n","Requirement already satisfied: pydantic<2,>=1.8.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (1.10.13)\n","Requirement already satisfied: PyYAML<6.1,>=5.0.0 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (6.0.1)\n","Requirement already satisfied: jinja2<3.2,>=2.11.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (3.1.2)\n","Collecting visions[type_image_path]==0.7.5 (from ydata-profiling->pandas-profiling)\n","  Downloading visions-0.7.5-py3-none-any.whl (102 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m102.7/102.7 kB\u001b[0m \u001b[31m10.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: numpy<1.26,>=1.16.0 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (1.23.5)\n","Collecting htmlmin==0.1.12 (from ydata-profiling->pandas-profiling)\n","  Downloading htmlmin-0.1.12.tar.gz (19 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Collecting phik<0.13,>=0.11.1 (from ydata-profiling->pandas-profiling)\n","  Downloading phik-0.12.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (679 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m679.5/679.5 kB\u001b[0m \u001b[31m48.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: requests<3,>=2.24.0 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (2.31.0)\n","Requirement already satisfied: tqdm<5,>=4.48.2 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (4.66.1)\n","Requirement already satisfied: seaborn<0.13,>=0.10.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (0.12.2)\n","Collecting multimethod<2,>=1.4 (from ydata-profiling->pandas-profiling)\n","  Downloading multimethod-1.10-py3-none-any.whl (9.9 kB)\n","Requirement already satisfied: statsmodels<1,>=0.13.2 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (0.14.0)\n","Collecting typeguard<5,>=4.1.2 (from ydata-profiling->pandas-profiling)\n","  Downloading typeguard-4.1.5-py3-none-any.whl (34 kB)\n","Collecting imagehash==4.3.1 (from ydata-profiling->pandas-profiling)\n","  Downloading ImageHash-4.3.1-py2.py3-none-any.whl (296 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m296.5/296.5 kB\u001b[0m \u001b[31m29.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: wordcloud>=1.9.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (1.9.2)\n","Collecting dacite>=1.8 (from ydata-profiling->pandas-profiling)\n","  Downloading dacite-1.8.1-py3-none-any.whl (14 kB)\n","Requirement already satisfied: numba<0.59.0,>=0.56.0 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (0.56.4)\n","Requirement already satisfied: PyWavelets in /usr/local/lib/python3.10/dist-packages (from imagehash==4.3.1->ydata-profiling->pandas-profiling) (1.4.1)\n","Requirement already satisfied: pillow in /usr/local/lib/python3.10/dist-packages (from imagehash==4.3.1->ydata-profiling->pandas-profiling) (9.4.0)\n","Requirement already satisfied: attrs>=19.3.0 in /usr/local/lib/python3.10/dist-packages (from visions[type_image_path]==0.7.5->ydata-profiling->pandas-profiling) (23.1.0)\n","Requirement already satisfied: networkx>=2.4 in /usr/local/lib/python3.10/dist-packages (from visions[type_image_path]==0.7.5->ydata-profiling->pandas-profiling) (3.1)\n","Collecting tangled-up-in-unicode>=0.0.4 (from visions[type_image_path]==0.7.5->ydata-profiling->pandas-profiling)\n","  Downloading tangled_up_in_unicode-0.2.0-py3-none-any.whl (4.7 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m4.7/4.7 MB\u001b[0m \u001b[31m74.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2<3.2,>=2.11.1->ydata-profiling->pandas-profiling) (2.1.3)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib<=3.7.3,>=3.2->ydata-profiling->pandas-profiling) (1.1.1)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib<=3.7.3,>=3.2->ydata-profiling->pandas-profiling) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib<=3.7.3,>=3.2->ydata-profiling->pandas-profiling) (4.43.1)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib<=3.7.3,>=3.2->ydata-profiling->pandas-profiling) (1.4.5)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib<=3.7.3,>=3.2->ydata-profiling->pandas-profiling) (23.2)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib<=3.7.3,>=3.2->ydata-profiling->pandas-profiling) (3.1.1)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib<=3.7.3,>=3.2->ydata-profiling->pandas-profiling) (2.8.2)\n","Requirement already satisfied: llvmlite<0.40,>=0.39.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba<0.59.0,>=0.56.0->ydata-profiling->pandas-profiling) (0.39.1)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from numba<0.59.0,>=0.56.0->ydata-profiling->pandas-profiling) (67.7.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas!=1.4.0,<2.1,>1.1->ydata-profiling->pandas-profiling) (2023.3.post1)\n","Requirement already satisfied: joblib>=0.14.1 in /usr/local/lib/python3.10/dist-packages (from phik<0.13,>=0.11.1->ydata-profiling->pandas-profiling) (1.3.2)\n","Requirement already satisfied: typing-extensions>=4.2.0 in /usr/local/lib/python3.10/dist-packages (from pydantic<2,>=1.8.1->ydata-profiling->pandas-profiling) (4.5.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.24.0->ydata-profiling->pandas-profiling) (3.3.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.24.0->ydata-profiling->pandas-profiling) (3.4)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.24.0->ydata-profiling->pandas-profiling) (2.0.6)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.24.0->ydata-profiling->pandas-profiling) (2023.7.22)\n","Requirement already satisfied: patsy>=0.5.2 in /usr/local/lib/python3.10/dist-packages (from statsmodels<1,>=0.13.2->ydata-profiling->pandas-profiling) (0.5.3)\n","Collecting typing-extensions>=4.2.0 (from pydantic<2,>=1.8.1->ydata-profiling->pandas-profiling)\n","  Downloading typing_extensions-4.8.0-py3-none-any.whl (31 kB)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from patsy>=0.5.2->statsmodels<1,>=0.13.2->ydata-profiling->pandas-profiling) (1.16.0)\n","Building wheels for collected packages: htmlmin\n","  Building wheel for htmlmin (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for htmlmin: filename=htmlmin-0.1.12-py3-none-any.whl size=27081 sha256=784f15c81ad0a003271bcca307e7a24ab8648b4cf1a426c8ab5d2e5f2ab2f919\n","  Stored in directory: /root/.cache/pip/wheels/dd/91/29/a79cecb328d01739e64017b6fb9a1ab9d8cb1853098ec5966d\n","Successfully built htmlmin\n","Installing collected packages: htmlmin, typing-extensions, tangled-up-in-unicode, multimethod, dacite, typeguard, imagehash, visions, phik, ydata-profiling, pandas-profiling\n","  Attempting uninstall: typing-extensions\n","    Found existing installation: typing_extensions 4.5.0\n","    Uninstalling typing_extensions-4.5.0:\n","      Successfully uninstalled typing_extensions-4.5.0\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","tensorflow 2.13.0 requires typing-extensions<4.6.0,>=3.6.6, but you have typing-extensions 4.8.0 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0mSuccessfully installed dacite-1.8.1 htmlmin-0.1.12 imagehash-4.3.1 multimethod-1.10 pandas-profiling-3.6.6 phik-0.12.3 tangled-up-in-unicode-0.2.0 typeguard-4.1.5 typing-extensions-4.8.0 visions-0.7.5 ydata-profiling-4.6.0\n","Enabling notebook extension jupyter-js-widgets/extension...\n","Paths used for configuration of notebook: \n","    \t/root/.jupyter/nbconfig/notebook.json\n","Paths used for configuration of notebook: \n","    \t\n","      - Validating: \u001b[32mOK\u001b[0m\n","Paths used for configuration of notebook: \n","    \t/root/.jupyter/nbconfig/notebook.json\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (3.7.1)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.1.1)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (4.43.1)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.4.5)\n","Requirement already satisfied: numpy>=1.20 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.23.5)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (23.2)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (9.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (3.1.1)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (2.8.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib) (1.16.0)\n","Requirement already satisfied: graphviz in /usr/local/lib/python3.10/dist-packages (0.20.1)\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np"],"metadata":{"id":"X2oI-xZpB7Vc","executionInfo":{"status":"ok","timestamp":1697234219462,"user_tz":240,"elapsed":130,"user":{"displayName":"Aidan Kowolik","userId":"04765293928967826033"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["import ProfileReport from pandas_profiling"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":141},"id":"pcVr6CpuDdEh","executionInfo":{"status":"error","timestamp":1697234736671,"user_tz":240,"elapsed":125,"user":{"displayName":"Aidan Kowolik","userId":"04765293928967826033"}},"outputId":"80190b87-68e1-4e0d-f1db-31698e424b4b"},"execution_count":16,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-16-27472c6f85c1>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    import ProfileReport from pandas_profiling\u001b[0m\n\u001b[0m                         ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}]},{"cell_type":"code","source":["profile = ProfileReport(SustainEnergyData)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":176},"id":"UxMJ_ArdEEoG","executionInfo":{"status":"error","timestamp":1697234659420,"user_tz":240,"elapsed":119,"user":{"displayName":"Aidan Kowolik","userId":"04765293928967826033"}},"outputId":"cfcf4941-990a-4f88-8c2b-0764fafdca2a"},"execution_count":13,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-13-ae73ee6b4d31>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mprofile\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mProfileReport\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mSustainEnergyData\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'ProfileReport' is not defined"]}]},{"cell_type":"code","source":["profile.to_notebook_iframe()"],"metadata":{"id":"4PiCEWk1EVYr"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"88gd55VIFCeS"}},{"cell_type":"code","source":["pip install pandas-profiling"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GVgLqwj_E1_9","executionInfo":{"status":"ok","timestamp":1697234851379,"user_tz":240,"elapsed":5658,"user":{"displayName":"Aidan Kowolik","userId":"04765293928967826033"}},"outputId":"f25cdb1b-8d62-4307-a23b-e4c33cf46d14"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: pandas-profiling in /usr/local/lib/python3.10/dist-packages (3.6.6)\n","Requirement already satisfied: ydata-profiling in /usr/local/lib/python3.10/dist-packages (from pandas-profiling) (4.6.0)\n","Requirement already satisfied: scipy<1.12,>=1.4.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (1.11.3)\n","Requirement already satisfied: pandas!=1.4.0,<2.1,>1.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (1.5.3)\n","Requirement already satisfied: matplotlib<=3.7.3,>=3.2 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (3.7.1)\n","Requirement already satisfied: pydantic<2,>=1.8.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (1.10.13)\n","Requirement already satisfied: PyYAML<6.1,>=5.0.0 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (6.0.1)\n","Requirement already satisfied: jinja2<3.2,>=2.11.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (3.1.2)\n","Requirement already satisfied: visions[type_image_path]==0.7.5 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (0.7.5)\n","Requirement already satisfied: numpy<1.26,>=1.16.0 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (1.23.5)\n","Requirement already satisfied: htmlmin==0.1.12 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (0.1.12)\n","Requirement already satisfied: phik<0.13,>=0.11.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (0.12.3)\n","Requirement already satisfied: requests<3,>=2.24.0 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (2.31.0)\n","Requirement already satisfied: tqdm<5,>=4.48.2 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (4.66.1)\n","Requirement already satisfied: seaborn<0.13,>=0.10.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (0.12.2)\n","Requirement already satisfied: multimethod<2,>=1.4 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (1.10)\n","Requirement already satisfied: statsmodels<1,>=0.13.2 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (0.14.0)\n","Requirement already satisfied: typeguard<5,>=4.1.2 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (4.1.5)\n","Requirement already satisfied: imagehash==4.3.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (4.3.1)\n","Requirement already satisfied: wordcloud>=1.9.1 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (1.9.2)\n","Requirement already satisfied: dacite>=1.8 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (1.8.1)\n","Requirement already satisfied: numba<0.59.0,>=0.56.0 in /usr/local/lib/python3.10/dist-packages (from ydata-profiling->pandas-profiling) (0.56.4)\n","Requirement already satisfied: PyWavelets in /usr/local/lib/python3.10/dist-packages (from imagehash==4.3.1->ydata-profiling->pandas-profiling) (1.4.1)\n","Requirement already satisfied: pillow in /usr/local/lib/python3.10/dist-packages (from imagehash==4.3.1->ydata-profiling->pandas-profiling) (9.4.0)\n","Requirement already satisfied: attrs>=19.3.0 in /usr/local/lib/python3.10/dist-packages (from visions[type_image_path]==0.7.5->ydata-profiling->pandas-profiling) (23.1.0)\n","Requirement already satisfied: networkx>=2.4 in /usr/local/lib/python3.10/dist-packages (from visions[type_image_path]==0.7.5->ydata-profiling->pandas-profiling) (3.1)\n","Requirement already satisfied: tangled-up-in-unicode>=0.0.4 in /usr/local/lib/python3.10/dist-packages (from visions[type_image_path]==0.7.5->ydata-profiling->pandas-profiling) (0.2.0)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2<3.2,>=2.11.1->ydata-profiling->pandas-profiling) (2.1.3)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib<=3.7.3,>=3.2->ydata-profiling->pandas-profiling) (1.1.1)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib<=3.7.3,>=3.2->ydata-profiling->pandas-profiling) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib<=3.7.3,>=3.2->ydata-profiling->pandas-profiling) (4.43.1)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib<=3.7.3,>=3.2->ydata-profiling->pandas-profiling) (1.4.5)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib<=3.7.3,>=3.2->ydata-profiling->pandas-profiling) (23.2)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib<=3.7.3,>=3.2->ydata-profiling->pandas-profiling) (3.1.1)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib<=3.7.3,>=3.2->ydata-profiling->pandas-profiling) (2.8.2)\n","Requirement already satisfied: llvmlite<0.40,>=0.39.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba<0.59.0,>=0.56.0->ydata-profiling->pandas-profiling) (0.39.1)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from numba<0.59.0,>=0.56.0->ydata-profiling->pandas-profiling) (67.7.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas!=1.4.0,<2.1,>1.1->ydata-profiling->pandas-profiling) (2023.3.post1)\n","Requirement already satisfied: joblib>=0.14.1 in /usr/local/lib/python3.10/dist-packages (from phik<0.13,>=0.11.1->ydata-profiling->pandas-profiling) (1.3.2)\n","Requirement already satisfied: typing-extensions>=4.2.0 in /usr/local/lib/python3.10/dist-packages (from pydantic<2,>=1.8.1->ydata-profiling->pandas-profiling) (4.8.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.24.0->ydata-profiling->pandas-profiling) (3.3.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.24.0->ydata-profiling->pandas-profiling) (3.4)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.24.0->ydata-profiling->pandas-profiling) (2.0.6)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.24.0->ydata-profiling->pandas-profiling) (2023.7.22)\n","Requirement already satisfied: patsy>=0.5.2 in /usr/local/lib/python3.10/dist-packages (from statsmodels<1,>=0.13.2->ydata-profiling->pandas-profiling) (0.5.3)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from patsy>=0.5.2->statsmodels<1,>=0.13.2->ydata-profiling->pandas-profiling) (1.16.0)\n"]}]},{"cell_type":"code","source":["pip install ProfileReport\n","prof = ProfileReport(SustainEnergyData)\n","prof.to_file(output_file='output.html')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pc4FJp0WFC8G","executionInfo":{"status":"error","timestamp":1697234938985,"user_tz":240,"elapsed":128,"user":{"displayName":"Aidan Kowolik","userId":"04765293928967826033"}},"outputId":"93b35e9a-3163-4fe1-b748-91bd617e3e95"},"execution_count":21,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-21-1d7e43868e7b>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    pip install ProfileReport\u001b[0m\n\u001b[0m        ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}]}]}